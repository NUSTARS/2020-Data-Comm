{"ast":null,"code":"var _jsxFileName = \"/Users/Nathan/Desktop/data-comm-ui/src/App.js\";\nimport React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Chart from \"./chart\";\n\nconst styles = theme => ({\n  \"chart-container\": {\n    height: 400\n  }\n});\n\nlet updateInterval = 1000;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      num_values: 30,\n      all_labels: [],\n      all_data: [],\n      lineChartData: {\n        labels: [],\n        datasets: [{\n          type: \"line\",\n          label: \"test\",\n          backgroundColor: \"rgba(0, 0, 0, 0)\",\n          borderColor: this.props.theme.palette.primary.main,\n          pointBackgroundColor: this.props.theme.palette.secondary.main,\n          pointBorderColor: this.props.theme.palette.secondary.main,\n          borderWidth: \"2\",\n          lineTension: 0.45,\n          data: []\n        }]\n      },\n      lineChartOptions: {\n        responsive: true,\n        maintainAspectRatio: false,\n        tooltips: {\n          enabled: true\n        },\n        scales: {\n          xAxes: [{\n            ticks: {\n              autoSkip: true,\n              maxTicksLimit: 10\n            }\n          }]\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    setInterval(this.updateChart = e => {\n      const oldDataSet = this.state.lineChartData.datasets[0];\n      const newDataSet = { ...oldDataSet\n      };\n      newDataSet.data.push(Math.round(Math.random() * 100));\n      newDataSet.data.shift();\n      const newChartData = { ...this.state.lineChartData,\n        datasets: [newDataSet],\n        labels: this.state.lineChartData.labels.concat(this.state.lineChartData.labels[this.state.lineChartData.labels.length - 1] + 1).slice(-10)\n      };\n      this.setState({\n        lineChartData: newChartData\n      });\n    }, updateInterval);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes[\"chart-container\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      data: this.state.lineChartData,\n      options: this.state.lineChartOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default withStyles(styles, {\n  withTheme: true\n})(App);","map":{"version":3,"sources":["/Users/Nathan/Desktop/data-comm-ui/src/App.js"],"names":["React","withStyles","Chart","styles","theme","height","updateInterval","App","Component","constructor","props","state","num_values","all_labels","all_data","lineChartData","labels","datasets","type","label","backgroundColor","borderColor","palette","primary","main","pointBackgroundColor","secondary","pointBorderColor","borderWidth","lineTension","data","lineChartOptions","responsive","maintainAspectRatio","tooltips","enabled","scales","xAxes","ticks","autoSkip","maxTicksLimit","componentDidMount","setInterval","updateChart","e","oldDataSet","newDataSet","push","Math","round","random","shift","newChartData","concat","length","slice","setState","render","classes","withTheme"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Chart from \"./chart\";\n\nconst styles = theme => ({\n  \"chart-container\": {\n    height: 400\n  }\n});\n\nlet updateInterval = 1000\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      num_values: 30,\n      all_labels: [],\n      all_data: [],\n      lineChartData: {\n        labels: [],\n        datasets: [\n          {\n            type: \"line\",\n            label: \"test\",\n            backgroundColor: \"rgba(0, 0, 0, 0)\",\n            borderColor: this.props.theme.palette.primary.main,\n            pointBackgroundColor: this.props.theme.palette.secondary.main,\n            pointBorderColor: this.props.theme.palette.secondary.main,\n            borderWidth: \"2\",\n            lineTension: 0.45,\n            data: []\n          }\n        ]\n      },\n        lineChartOptions: {\n          responsive: true,\n          maintainAspectRatio: false,\n          tooltips: {\n            enabled: true\n          },\n          scales: {\n            xAxes: [\n              {\n                ticks: {\n                  autoSkip: true,\n                  maxTicksLimit: 10\n                }\n              }\n            ]\n          }\n        }\n      };\n    }\n  \n  componentDidMount() {\n    setInterval( this.updateChart = e => {\n      const oldDataSet = this.state.lineChartData.datasets[0];\n      const newDataSet = { ...oldDataSet };\n      newDataSet.data.push(Math.round(Math.random()*100));\n      newDataSet.data.shift();\n\n      const newChartData = {\n        ...this.state.lineChartData,\n        datasets: [newDataSet],\n        labels: this.state.lineChartData.labels.concat(\n          this.state.lineChartData.labels[this.state.lineChartData.labels.length-1]+1\n        ).slice(-10)\n      };\n      this.setState({ lineChartData: newChartData });\n    },\n    updateInterval)\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes[\"chart-container\"]}>\n        <Chart\n          data={this.state.lineChartData}\n          options={this.state.lineChartOptions}\n        />\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(App);"]},"metadata":{},"sourceType":"module"}