{"ast":null,"code":"var _jsxFileName = \"/Users/Nathan/Desktop/data-comm-ui/src/selectPort.js\";\nimport React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport Button from '@material-ui/core/Button';\nimport { useTracked } from './globalState';\nexport function SelectPort(props) {\n  const initialState = {\n    ports: [],\n    selected: '',\n    click: 0 // just to make useEffect run again\n\n  };\n  const [portState, setPortState] = useState(initialState);\n  const [state, setState] = useTracked();\n  useEffect(() => {\n    fetch('/ports/').then(res => res.json()).then(data => {\n      var options = [];\n      data.ports.forEach(port => options.push({\n        value: port,\n        label: port\n      }));\n      setPortState({\n        ports: options\n      });\n    });\n  }, [portState.click]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    name: \"ports\",\n    options: portState.ports,\n    className: \"basic-single\",\n    classNamePrefix: \"select\",\n    onChange: selectedOption => {\n      setPortState({\n        selected: selectedOption.value\n      });\n      console.log(selectedOption.value);\n      setState({\n        port: selectedOption.value\n      }); // send selected port to flask background thread\n\n      fetch('/selected-port/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          port: selectedOption.value\n        })\n      }).then(response => response.json()).then(data => {\n        console.log('Send port to Flask:', data);\n      }).catch(error => {\n        console.error('Error in sending port:', error);\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: () => setPortState({\n      click: portState.click + 1\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Refresh\"));\n}","map":{"version":3,"sources":["/Users/Nathan/Desktop/data-comm-ui/src/selectPort.js"],"names":["React","useState","useEffect","Select","Button","useTracked","SelectPort","props","initialState","ports","selected","click","portState","setPortState","state","setState","fetch","then","res","json","data","options","forEach","port","push","value","label","selectedOption","console","log","method","headers","body","JSON","stringify","response","catch","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,UAAT,QAA2B,eAA3B;AAGA,OAAO,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAChC,QAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAE,EADY;AAEnBC,IAAAA,QAAQ,EAAE,EAFS;AAGnBC,IAAAA,KAAK,EAAE,CAHY,CAGV;;AAHU,GAArB;AAMA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAACO,YAAD,CAA1C;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBV,UAAU,EAApC;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,KAAK,CAAC,SAAD,CAAL,CAAiBC,IAAjB,CAAsBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAA7B,EACGF,IADH,CACQG,IAAI,IAAI;AACZ,UAAIC,OAAO,GAAG,EAAd;AACAD,MAAAA,IAAI,CAACX,KAAL,CAAWa,OAAX,CAAmBC,IAAI,IAAIF,OAAO,CAACG,IAAR,CACzB;AACEC,QAAAA,KAAK,EAAEF,IADT;AAEEG,QAAAA,KAAK,EAAEH;AAFT,OADyB,CAA3B;AAMAV,MAAAA,YAAY,CAAC;AAACJ,QAAAA,KAAK,EAAEY;AAAR,OAAD,CAAZ;AACD,KAVH;AAWD,GAZQ,EAYN,CAACT,SAAS,CAACD,KAAX,CAZM,CAAT;AAcA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,OAAO,EAAEC,SAAS,CAACH,KAFrB;AAGE,IAAA,SAAS,EAAC,cAHZ;AAIE,IAAA,eAAe,EAAC,QAJlB;AAKE,IAAA,QAAQ,EAAGkB,cAAD,IAAoB;AAC5Bd,MAAAA,YAAY,CAAC;AAACH,QAAAA,QAAQ,EAAEiB,cAAc,CAACF;AAA1B,OAAD,CAAZ;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYF,cAAc,CAACF,KAA3B;AAEAV,MAAAA,QAAQ,CAAC;AAACQ,QAAAA,IAAI,EAAEI,cAAc,CAACF;AAAtB,OAAD,CAAR,CAJ4B,CAM5B;;AACAT,MAAAA,KAAK,CAAC,iBAAD,EAAoB;AACvBc,QAAAA,MAAM,EAAE,MADe;AAEvBC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFc;AAKvBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACX,UAAAA,IAAI,EAAEI,cAAc,CAACF;AAAtB,SAAf;AALiB,OAApB,CAAL,CAOCR,IAPD,CAOMkB,QAAQ,IAAIA,QAAQ,CAAChB,IAAT,EAPlB,EAQCF,IARD,CAQMG,IAAI,IAAI;AACZQ,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCT,IAAnC;AACD,OAVD,EAWCgB,KAXD,CAWQC,KAAD,IAAW;AAChBT,QAAAA,OAAO,CAACS,KAAR,CAAc,wBAAd,EAAwCA,KAAxC;AACD,OAbD;AAcD,KA1BH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eA6BE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,OAAO,EAAG,MAAMxB,YAAY,CAAC;AAACF,MAAAA,KAAK,EAAEC,SAAS,CAACD,KAAV,GAAgB;AAAxB,KAAD,CAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA7BF,CADF;AAqCD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport Button from '@material-ui/core/Button';\nimport { useTracked } from './globalState';\n\n\nexport function SelectPort(props) {\n  const initialState = {\n    ports: [],\n    selected: '',\n    click: 0 // just to make useEffect run again\n  };\n\n  const [portState, setPortState] = useState(initialState);\n  const [state, setState] = useTracked();\n\n  useEffect(() => {\n    fetch('/ports/').then(res => res.json())\n      .then(data => {\n        var options = [];\n        data.ports.forEach(port => options.push(\n          {\n            value: port,\n            label: port\n          }\n        ));\n        setPortState({ports: options});\n      });\n  }, [portState.click])\n\n  return (\n    <div>\n      <Select\n        name=\"ports\"\n        options={portState.ports}\n        className=\"basic-single\"\n        classNamePrefix=\"select\"\n        onChange={(selectedOption) => {\n          setPortState({selected: selectedOption.value});\n          console.log(selectedOption.value);\n\n          setState({port: selectedOption.value});\n      \n          // send selected port to flask background thread\n          fetch('/selected-port/', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({port: selectedOption.value}),\n          })\n          .then(response => response.json())\n          .then(data => {\n            console.log('Send port to Flask:', data);\n          })\n          .catch((error) => {\n            console.error('Error in sending port:', error);\n          });\n        }}\n      />\n      <Button \n        variant=\"contained\" \n        onClick={(() => setPortState({click: portState.click+1}))}>\n          Refresh\n      </Button>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}