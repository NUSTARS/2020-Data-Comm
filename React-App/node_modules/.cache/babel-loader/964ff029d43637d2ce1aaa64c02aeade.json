{"ast":null,"code":"var _jsxFileName = \"/Users/Nathan/Desktop/data-comm-ui/src/table.js\";\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport { useTracked } from './globalState';\nconst useStyles = makeStyles({\n  table: {// minWidth: 350,\n  }\n});\n\nfunction createData(label, name, value, type) {\n  return {\n    label,\n    name,\n    value,\n    type\n  };\n}\n\nexport default function CustomizedTables() {\n  const classes = useStyles();\n  const initialState = {\n    rows: []\n  };\n  const [tableState, setTableState] = useState(initialState);\n  const [state, setState] = useTracked();\n  useEffect(() => {\n    var r = [];\n    Object.keys(state.data).forEach(key => {\n      r.append(createData(key, /*#__PURE__*/React.createElement(TextField, {\n        id: \"name-${key}\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 27\n        }\n      }), state.data[key][state.data[key].length - 1][1], /*#__PURE__*/React.createElement(TextField, {\n        id: \"type-${key}\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 73\n        }\n      })));\n    });\n    setTableState({\n      rows: r\n    });\n  });\n  return /*#__PURE__*/React.createElement(TableContainer, {\n    style: {\n      paddingBottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    size: \"small\",\n    \"aria-label\": \"live data table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Label\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Value\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Type\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"if (typeof rows !== 'undefined') \", rows.map(row => /*#__PURE__*/React.createElement(TableRow, {\n    key: row.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, row.label), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, row.name), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, row.value), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, row.type))))));\n}","map":{"version":3,"sources":["/Users/Nathan/Desktop/data-comm-ui/src/table.js"],"names":["React","useState","useEffect","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","TextField","useTracked","useStyles","table","createData","label","name","value","type","CustomizedTables","classes","initialState","rows","tableState","setTableState","state","setState","r","Object","keys","data","forEach","key","append","length","paddingBottom","map","row"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport { useTracked } from './globalState';\n\nconst useStyles = makeStyles({\n  table: {\n    // minWidth: 350,\n  },\n});\n\nfunction createData(label, name, value, type) {\n  return { label, name, value, type };\n}\n\nexport default function CustomizedTables() {\n  const classes = useStyles();\n\n  const initialState = {\n    rows: []\n  };\n\n  const [tableState, setTableState] = useState(initialState);\n  const [state, setState] = useTracked();\n\n  useEffect(() => {\n    var r = []\n    Object.keys(state.data).forEach((key) => {\n      r.append(createData(key, \n                          <TextField id=\"name-${key}\"/>, \n                          state.data[key][state.data[key].length-1][1], <\n                          TextField id=\"type-${key}\"/>\n                         )\n              )\n    });\n    setTableState({rows: r});\n  })\n\n  return (\n    <TableContainer style={{paddingBottom: 20}}>\n      <Table className={classes.table} size=\"small\" aria-label=\"live data table\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"right\">Label</TableCell>\n            <TableCell align=\"right\">Name</TableCell>\n            <TableCell align=\"right\">Value</TableCell>\n            <TableCell align=\"right\">Type</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          if (typeof rows !== 'undefined') {rows.map((row) => (\n            <TableRow key={row.label}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.label}\n              </TableCell>\n              <TableCell align=\"right\">{row.name}</TableCell>\n              <TableCell align=\"right\">{row.value}</TableCell>\n              <TableCell align=\"right\">{row.type}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}"]},"metadata":{},"sourceType":"module"}