{"ast":null,"code":"var _jsxFileName = \"/Users/Nathan/Desktop/data-comm-ui/src/readPacket.js\";\n\nclass readPacket extends React.Component {\n  constructor() {\n    this.state = {\n      byteArray: [],\n      done: false\n    };\n    this.xhr = null;\n  }\n\n  componentDidMount() {\n    this.xhr = new XMLHttpRequest();\n    this.xhr.open('GET', '/api/binary', true);\n\n    this.xhr.onload = () => {\n      if (request.status >= 200 && request.status < 400) {\n        var uInt8Array = new Uint8Array(this.response);\n        this.setState({\n          byteArray: uInt8Array,\n          done: true\n        });\n      }\n    };\n\n    this.xhr.send();\n  }\n\n  componentWillUnmount() {\n    // Cancel the xhr request, so the callback is never called\n    if (this.xhr && this.xhr.readyState != 4) {\n      this.xhr.abort();\n    }\n  }\n\n  render() {\n    if (!this.state.done) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }\n      }, \"Users Loading\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }\n      }, \"Users: \", this.state.users);\n    }\n  }\n\n}\n\nexport default readPacket;","map":{"version":3,"sources":["/Users/Nathan/Desktop/data-comm-ui/src/readPacket.js"],"names":["readPacket","React","Component","constructor","state","byteArray","done","xhr","componentDidMount","XMLHttpRequest","open","onload","request","status","uInt8Array","Uint8Array","response","setState","send","componentWillUnmount","readyState","abort","render","users"],"mappings":";;AAAA,MAAMA,UAAN,SAAyBC,KAAK,CAACC,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,GAAG;AACV,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,EADF;AAETC,MAAAA,IAAI,EAAE;AAFG,KAAb;AAIA,SAAKC,GAAL,GAAW,IAAX;AACH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKD,GAAL,GAAW,IAAIE,cAAJ,EAAX;AACA,SAAKF,GAAL,CAASG,IAAT,CAAc,KAAd,EAAqB,aAArB,EAAoC,IAApC;;AACA,SAAKH,GAAL,CAASI,MAAT,GAAkB,MAAM;AACtB,UAAIC,OAAO,CAACC,MAAR,IAAkB,GAAlB,IAAyBD,OAAO,CAACC,MAAR,GAAiB,GAA9C,EAAmD;AACjD,YAAIC,UAAU,GAAG,IAAIC,UAAJ,CAAe,KAAKC,QAApB,CAAjB;AACA,aAAKC,QAAL,CAAc;AAACZ,UAAAA,SAAS,EAAES,UAAZ;AAAwBR,UAAAA,IAAI,EAAE;AAA9B,SAAd;AACD;AACF,KALD;;AAMA,SAAKC,GAAL,CAASW,IAAT;AACH;;AACDC,EAAAA,oBAAoB,GAAG;AACnB;AACA,QAAI,KAAKZ,GAAL,IAAY,KAAKA,GAAL,CAASa,UAAT,IAAuB,CAAvC,EAA0C;AACtC,WAAKb,GAAL,CAASc,KAAT;AACH;AACJ;;AACDC,EAAAA,MAAM,GAAG;AACL,QAAG,CAAC,KAAKlB,KAAL,CAAWE,IAAf,EAAqB;AACjB,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ;AAKH,KAND,MAMO;AACH,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACY,KAAKF,KAAL,CAAWmB,KADvB,CADJ;AAKH;AACJ;;AAvCsC;;AA0CzC,eAAevB,UAAf","sourcesContent":["class readPacket extends React.Component {\n  constructor() {\n      this.state = {\n          byteArray: [],\n          done: false\n      }\n      this.xhr = null\n  }\n  componentDidMount() {\n      this.xhr = new XMLHttpRequest()\n      this.xhr.open('GET', '/api/binary', true);\n      this.xhr.onload = () => {\n        if (request.status >= 200 && request.status < 400) {\n          var uInt8Array = new Uint8Array(this.response);\n          this.setState({byteArray: uInt8Array, done: true})\n        } \n      };\n      this.xhr.send();\n  }\n  componentWillUnmount() {\n      // Cancel the xhr request, so the callback is never called\n      if (this.xhr && this.xhr.readyState != 4) {\n          this.xhr.abort();\n      }\n  }\n  render() {\n      if(!this.state.done) {\n          return (\n              <div>\n                  Users Loading \n              </div>\n          )\n      } else {\n          return (\n              <div>\n                  Users: {this.state.users}            \n              </div>\n          )\n      }\n  }\n}\n\nexport default readPacket;\n\n"]},"metadata":{},"sourceType":"module"}