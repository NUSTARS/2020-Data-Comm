{"ast":null,"code":"var _jsxFileName = \"/Users/Nathan/Desktop/data-comm-ui/src/App.js\";\n// import React from 'react';\n// import logo from './logo.svg';\n// import './App.css';\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n// export default App;\nimport React from \"react\"; // import { render } from \"react-dom\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Chart from \"./chart\"; // import {Line} from 'react-chartjs-2';\n\nconst styles = theme => ({\n  \"chart-container\": {\n    height: 400\n  }\n}); // const state = {\n//   labels: ['January', 'February', 'March',\n//            'April', 'May'],\n//   datasets: [\n//     {\n//       label: 'Rainfall',\n//       fill: false,\n//       lineTension: 0.5,\n//       backgroundColor: 'rgba(75,192,192,1)',\n//       borderColor: 'rgba(0,0,0,1)',\n//       borderWidth: 2,\n//       data: [65, 59, 80, 81, 56]\n//     }\n//   ]\n// }\n\n\nlet dps = [{\n  x: 1,\n  y: 10\n}, {\n  x: 2,\n  y: 13\n}, {\n  x: 3,\n  y: 18\n}, {\n  x: 4,\n  y: 20\n}, {\n  x: 5,\n  y: 17\n}, {\n  x: 6,\n  y: 10\n}, {\n  x: 7,\n  y: 13\n}, {\n  x: 8,\n  y: 18\n}, {\n  x: 9,\n  y: 20\n}, {\n  x: 10,\n  y: 17\n}];\nlet updateInterval = 1000;\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lineChartData: {\n        labels: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n        datasets: [{\n          type: \"line\",\n          label: \"test\",\n          backgroundColor: \"rgba(0, 0, 0, 0)\",\n          borderColor: this.props.theme.palette.primary.main,\n          pointBackgroundColor: this.props.theme.palette.secondary.main,\n          pointBorderColor: this.props.theme.palette.secondary.main,\n          borderWidth: \"2\",\n          lineTension: 0.45,\n          data: [10, 13, 18, 20, 17, 10, 13, 18, 20, 17]\n        }]\n      },\n      lineChartOptions: {\n        responsive: true,\n        maintainAspectRatio: false,\n        tooltips: {\n          enabled: true\n        },\n        scales: {\n          xAxes: [{\n            ticks: {\n              autoSkip: true,\n              maxTicksLimit: 10\n            }\n          }]\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    setInterval(this.updateChart, updateInterval);\n  }\n\n  updateChart() {\n    const oldDataSet = this.state.lineChartData.datasets[0];\n    const newDataSet = { ...oldDataSet\n    };\n    newDataSet.data.push(Math.round(Math.random() * 100));\n    const newChartData = { ...this.state.lineChartData,\n      datasets: [newDataSet],\n      labels: this.state.lineChartData.labels.concat(this.state.lineChartData.labels[this.state.lineChartData.labels.length - 1] + 1)\n    };\n    this.setState({\n      lineChartData: newChartData\n    });\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes[\"chart-container\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      data: this.state.lineChartData,\n      options: this.state.lineChartOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default withStyles(styles, {\n  withTheme: true\n})(App);","map":{"version":3,"sources":["/Users/Nathan/Desktop/data-comm-ui/src/App.js"],"names":["React","withStyles","Chart","styles","theme","height","dps","x","y","updateInterval","App","Component","state","lineChartData","labels","datasets","type","label","backgroundColor","borderColor","props","palette","primary","main","pointBackgroundColor","secondary","pointBorderColor","borderWidth","lineTension","data","lineChartOptions","responsive","maintainAspectRatio","tooltips","enabled","scales","xAxes","ticks","autoSkip","maxTicksLimit","componentDidMount","setInterval","updateChart","oldDataSet","newDataSet","push","Math","round","random","newChartData","concat","length","setState","render","classes","withTheme"],"mappings":"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","sourcesContent":["// import React from 'react';\n// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\nimport React from \"react\";\n// import { render } from \"react-dom\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Chart from \"./chart\";\n// import {Line} from 'react-chartjs-2';\n\nconst styles = theme => ({\n  \"chart-container\": {\n    height: 400\n  }\n});\n\n// const state = {\n//   labels: ['January', 'February', 'March',\n//            'April', 'May'],\n//   datasets: [\n//     {\n//       label: 'Rainfall',\n//       fill: false,\n//       lineTension: 0.5,\n//       backgroundColor: 'rgba(75,192,192,1)',\n//       borderColor: 'rgba(0,0,0,1)',\n//       borderWidth: 2,\n//       data: [65, 59, 80, 81, 56]\n//     }\n//   ]\n// }\n\nlet dps = [{x: 1, y: 10}, {x: 2, y: 13}, {x: 3, y: 18}, {x: 4, y: 20}, {x: 5, y: 17},{x: 6, y: 10}, {x: 7, y: 13}, {x: 8, y: 18}, {x: 9, y: 20}, {x: 10, y: 17}];\nlet updateInterval = 1000\n\nclass App extends React.Component {\n  state = {\n    lineChartData: {\n      labels: [1,2,3,4,5,6,7,8,9,10],\n      datasets: [\n        {\n          type: \"line\",\n          label: \"test\",\n          backgroundColor: \"rgba(0, 0, 0, 0)\",\n          borderColor: this.props.theme.palette.primary.main,\n          pointBackgroundColor: this.props.theme.palette.secondary.main,\n          pointBorderColor: this.props.theme.palette.secondary.main,\n          borderWidth: \"2\",\n          lineTension: 0.45,\n          data: [10,13,18,20,17,10,13,18,20,17]\n        }\n      ]\n    },\n    lineChartOptions: {\n      responsive: true,\n      maintainAspectRatio: false,\n      tooltips: {\n        enabled: true\n      },\n      scales: {\n        xAxes: [\n          {\n            ticks: {\n              autoSkip: true,\n              maxTicksLimit: 10\n            }\n          }\n        ]\n      }\n    }\n  };\n\n  componentDidMount() {\n      setInterval(this.updateChart, updateInterval);\n  }\n\n  updateChart() {\n      const oldDataSet = this.state.lineChartData.datasets[0];\n      const newDataSet = { ...oldDataSet };\n      newDataSet.data.push(Math.round(Math.random()*100));\n\n      const newChartData = {\n        ...this.state.lineChartData,\n        datasets: [newDataSet],\n        labels: this.state.lineChartData.labels.concat(\n          this.state.lineChartData.labels[this.state.lineChartData.labels.length-1]+1\n        )\n      };\n      this.setState({ lineChartData: newChartData });\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes[\"chart-container\"]}>\n        <Chart\n          data={this.state.lineChartData}\n          options={this.state.lineChartOptions}\n        />\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(App);"]},"metadata":{},"sourceType":"module"}