{"ast":null,"code":"var _jsxFileName = \"/Users/Nathan/Desktop/data-comm-ui/src/graph.js\";\nimport React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Chart from \"./chart\";\nimport { Resizable, ResizableBox } from 'react-resizable';\nimport * as zoom from 'chartjs-plugin-zoom';\nimport DropDown from \"./dropdown\";\nimport \"./split-pane.css\";\n\nconst styles = theme => ({\n  \"chart-container\": {\n    maxHeight: 600,\n    overflow: \"hidden\"\n  }\n});\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  }\n}));\nlet updateInterval = 1000;\nlet typeData = \"Live\";\n\nclass Graph extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      meta: {\n        ticks: props.ticks,\n        lab: [],\n        dat: []\n      },\n      lineChartData: {\n        labels: [],\n        datasets: [{\n          type: \"line\",\n          label: typeData,\n          backgroundColor: \"rgba(0, 0, 0, 0)\",\n          borderColor: this.props.theme.palette.primary.main,\n          pointBackgroundColor: this.props.theme.palette.secondary.main,\n          pointBorderColor: this.props.theme.palette.secondary.main,\n          borderWidth: \"2\",\n          lineTension: 0.45,\n          data: []\n        }]\n      },\n      lineChartOptions: {\n        responsive: true,\n        maintainAspectRatio: false,\n        tooltips: {\n          enabled: true\n        },\n        scales: {\n          xAxes: [{\n            ticks: {\n              autoSkip: true,\n              // maxTicksLimit: props.ticks,\n              suggestedMax: 100\n            }\n          }]\n        },\n        plugins: {\n          zoom: {\n            pan: {\n              enabled: true,\n              mode: 'x'\n            },\n            zoom: {\n              enabled: true,\n              mode: 'x'\n            }\n          }\n        }\n      }\n    };\n    this.ref = {\n      lineChart: React.createRef()\n    };\n    this.updateChart = this.updateChart.bind(this);\n  }\n\n  componentDidMount() {\n    setInterval(this.updateChart, updateInterval);\n  }\n\n  updateChart() {\n    console.log(this.state.lineChartOptions.scales.xAxes.suggestedMax);\n    const newDat = this.state.meta.dat;\n    const newNum = Math.round(Math.random() * 100);\n    newDat.push(newNum);\n    const newLab = [...Array(newDat.length).keys()];\n    const newMeta = {\n      ticks: this.props.ticks,\n      lab: newLab,\n      dat: newDat\n    };\n    this.setState({\n      meta: newMeta\n    });\n    const oldDataSet = this.state.lineChartData.datasets[0];\n    let newDataSet = { ...oldDataSet\n    };\n    newDataSet.data.push(newNum);\n    const possLabs = this.state.meta.lab;\n    const newChartData = { ...this.state.lineChartData,\n      datasets: [newDataSet],\n      labels: possLabs\n    };\n    this.setState({\n      lineChartData: newChartData\n    });\n  }\n\n  render() {\n    const classes = useStyles();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ResizableBox, {\n      width: 400,\n      height: 200,\n      minConstraints: [100, 100],\n      maxConstraints: [800, 400],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      data: this.state.lineChartData,\n      options: this.state.lineChartOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(DropDown, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    })))));\n  }\n\n}\n\nexport default withStyles(styles, {\n  withTheme: true\n})(Graph);","map":{"version":3,"sources":["/Users/Nathan/Desktop/data-comm-ui/src/graph.js"],"names":["React","withStyles","Grid","makeStyles","Chart","Resizable","ResizableBox","zoom","DropDown","styles","theme","maxHeight","overflow","useStyles","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","updateInterval","typeData","Graph","Component","constructor","props","state","meta","ticks","lab","dat","lineChartData","labels","datasets","type","label","backgroundColor","borderColor","primary","main","pointBackgroundColor","pointBorderColor","borderWidth","lineTension","data","lineChartOptions","responsive","maintainAspectRatio","tooltips","enabled","scales","xAxes","autoSkip","suggestedMax","plugins","pan","mode","ref","lineChart","createRef","updateChart","bind","componentDidMount","setInterval","console","log","newDat","newNum","Math","round","random","push","newLab","Array","length","keys","newMeta","setState","oldDataSet","newDataSet","possLabs","newChartData","render","classes","withTheme"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Chart from \"./chart\";\nimport { Resizable, ResizableBox } from 'react-resizable';\nimport * as zoom from 'chartjs-plugin-zoom';\nimport DropDown from \"./dropdown\";\nimport \"./split-pane.css\";\n\nconst styles = theme => ({\n  \"chart-container\": {\n    maxHeight: 600,\n    overflow: \"hidden\"\n  }\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nlet updateInterval = 1000;\nlet typeData = \"Live\";\n\nclass Graph extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      meta: {\n        ticks: props.ticks,\n        lab: [],\n        dat: []\n      },\n      lineChartData: {\n        labels: [],\n        datasets: [\n          {\n            type: \"line\",\n            label: typeData,\n            backgroundColor: \"rgba(0, 0, 0, 0)\",\n            borderColor: this.props.theme.palette.primary.main,\n            pointBackgroundColor: this.props.theme.palette.secondary.main,\n            pointBorderColor: this.props.theme.palette.secondary.main,\n            borderWidth: \"2\",\n            lineTension: 0.45,\n            data: []\n          }\n        ]\n      },\n      lineChartOptions: {\n        responsive: true,\n        maintainAspectRatio: false,\n        tooltips: {\n          enabled: true\n        },\n        scales: {\n          xAxes: [\n            {\n              ticks: {\n                autoSkip: true,\n                // maxTicksLimit: props.ticks,\n                suggestedMax: 100\n              }\n            }\n          ]\n        },\n        plugins: {\n          zoom: {\n              pan: {\n                  enabled: true,\n                  mode: 'x'\n              },\n              zoom: {\n                  enabled: true,\n                  mode: 'x',\n              }\n          }\n      }\n      }\n    };\n    this.ref = {\n      lineChart:React.createRef()\n    };\n    this.updateChart = this.updateChart.bind(this);\n  }\n\n  componentDidMount() {\n    setInterval( this.updateChart,\n    updateInterval)\n  }\n\n  updateChart() {\n      console.log(this.state.lineChartOptions.scales.xAxes.suggestedMax);\n      const newDat = this.state.meta.dat;\n      const newNum = Math.round(Math.random()*100);\n\n      newDat.push(newNum);\n      const newLab = [...Array(newDat.length).keys()];\n\n      const newMeta = {ticks: this.props.ticks, lab: newLab, dat: newDat}\n      this.setState({meta: newMeta})\n\n      const oldDataSet = this.state.lineChartData.datasets[0];\n      let newDataSet = { ...oldDataSet };\n      newDataSet.data.push(newNum);\n\n      const possLabs = this.state.meta.lab;\n\n      const newChartData = {\n        ...this.state.lineChartData,\n        datasets: [newDataSet],\n        labels: possLabs\n\n      };\n      this.setState({ lineChartData: newChartData });\n    }\n\n  render() {\n    const classes = useStyles();\n\n    return (\n      <div className={classes.root}>\n        <Grid container spacing={3}>\n        <Grid xs={12}>\n        <Grid item xs={6}>\n        <ResizableBox  width={400} height={200}\n        minConstraints={[100, 100]} maxConstraints={[800, 400]}>\n        <Chart \n          data={this.state.lineChartData}\n          options={this.state.lineChartOptions}\n        />\n        </ResizableBox>\n        </Grid>\n        <Grid item xs={3}>\n        <DropDown />\n        </Grid>\n        </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(Graph);"]},"metadata":{},"sourceType":"module"}