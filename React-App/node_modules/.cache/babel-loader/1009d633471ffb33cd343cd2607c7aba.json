{"ast":null,"code":"var _jsxFileName = \"/Users/Nathan/Desktop/data-comm-ui/src/ticks.js\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\"; // class Toggle extends React.Component {\n//     constructor(props) {\n//       super(props);\n//       this.state = {isToggleOn: true};\n//       // This binding is necessary to make `this` work in the callback\n//       this.handleClick = this.handleClick.bind(this);\n//     }\n//     handleClick() {\n//       this.setState(state => ({\n//         isToggleOn: !state.isToggleOn\n//       }));\n//     }\n//     render() {\n//       return (\n//         <button onClick={this.handleClick}>\n//           {this.state.isToggleOn ? 'ON' : 'OFF'}\n//         </button>\n//       );\n//     }\n//   }\n// export default Toggle;\n\nclass Toggle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Button: styled.button`\n        background-color: black;\n        color: white;\n        font-size: 20px;\n        padding: 10px 60px;\n        border-radius: 5px;\n        margin: 10px 0px;\n        cursor: pointer;\n        &:disabled {\n            color: grey;\n            opacity: 0.7;\n            cursor: default;\n        }\n        `,\n      ButtonToggle: styled(this.Button)`\n        opacity: 0.6;\n        ${({\n        active\n      }) => active && `\n            opacity: 1;\n        `}\n        `,\n      ButtonGroup: styled.div`\n        display: flex;\n        `,\n      types: ['Cash', 'Credit Card', 'Bitcoin']\n    };\n  }\n\n  render() {\n    const [active, setActive] = useState(this.types[0]);\n    return /*#__PURE__*/React.createElement(this.ButtonGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, this.types.map(type => /*#__PURE__*/React.createElement(this.ButtonToggle, {\n      key: type,\n      active: active === type,\n      onClick: () => setActive(type),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }, type)));\n  }\n\n}\n\nexport default Toggle;","map":{"version":3,"sources":["/Users/Nathan/Desktop/data-comm-ui/src/ticks.js"],"names":["React","useState","styled","Toggle","Component","constructor","props","state","Button","button","ButtonToggle","active","ButtonGroup","div","types","render","setActive","map","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAqC;AAEjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAInBC,KAJmB,GAIX;AACJC,MAAAA,MAAM,EAAEN,MAAM,CAACO,MAAO;;;;;;;;;;;;;SADlB;AAgBJC,MAAAA,YAAY,EAAER,MAAM,CAAC,KAAKM,MAAN,CAAc;;UAEhC,CAAC;AAAEG,QAAAA;AAAF,OAAD,KACEA,MAAM,IACL;;SAEH;SAtBE;AAyBJC,MAAAA,WAAW,EAAEV,MAAM,CAACW,GAAI;;SAzBpB;AA6BJC,MAAAA,KAAK,EAAE,CAAC,MAAD,EAAS,aAAT,EAAwB,SAAxB;AA7BH,KAJW;AAElB;;AAmCDC,EAAAA,MAAM,GAAG;AACL,UAAM,CAACJ,MAAD,EAASK,SAAT,IAAsBf,QAAQ,CAAC,KAAKa,KAAL,CAAW,CAAX,CAAD,CAApC;AACA,wBACY,yBAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKA,KAAL,CAAWG,GAAX,CAAeC,IAAI,iBAChB,yBAAM,YAAN;AACA,MAAA,GAAG,EAAEA,IADL;AAEA,MAAA,MAAM,EAAEP,MAAM,KAAKO,IAFnB;AAGA,MAAA,OAAO,EAAE,MAAMF,SAAS,CAACE,IAAD,CAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKCA,IALD,CADH,CADD,CADZ;AAaK;;AAtDwB;;AAyDrC,eAAef,MAAf","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\n// class Toggle extends React.Component {\n//     constructor(props) {\n//       super(props);\n//       this.state = {isToggleOn: true};\n  \n//       // This binding is necessary to make `this` work in the callback\n//       this.handleClick = this.handleClick.bind(this);\n//     }\n  \n//     handleClick() {\n//       this.setState(state => ({\n//         isToggleOn: !state.isToggleOn\n//       }));\n//     }\n  \n//     render() {\n//       return (\n//         <button onClick={this.handleClick}>\n//           {this.state.isToggleOn ? 'ON' : 'OFF'}\n//         </button>\n//       );\n//     }\n//   }\n\n// export default Toggle;\n\nclass Toggle extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    state = {\n        Button: styled.button`\n        background-color: black;\n        color: white;\n        font-size: 20px;\n        padding: 10px 60px;\n        border-radius: 5px;\n        margin: 10px 0px;\n        cursor: pointer;\n        &:disabled {\n            color: grey;\n            opacity: 0.7;\n            cursor: default;\n        }\n        `,\n\n        ButtonToggle: styled(this.Button)`\n        opacity: 0.6;\n        ${({ active }) =>\n            active &&\n            `\n            opacity: 1;\n        `}\n        `,\n\n        ButtonGroup: styled.div`\n        display: flex;\n        `,\n\n        types: ['Cash', 'Credit Card', 'Bitcoin']\n    };\n        \n\n    render() {\n        const [active, setActive] = useState(this.types[0]);\n        return (\n                    <this.ButtonGroup>\n                    {this.types.map(type => (\n                        <this.ButtonToggle\n                        key={type}\n                        active={active === type}\n                        onClick={() => setActive(type)}\n                        >\n                        {type}\n                        </this.ButtonToggle>\n                    ))}\n                    </this.ButtonGroup>\n        );\n            };\n    }\n\nexport default Toggle;"]},"metadata":{},"sourceType":"module"}