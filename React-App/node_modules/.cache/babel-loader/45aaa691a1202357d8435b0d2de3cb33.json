{"ast":null,"code":"var _jsxFileName = \"/Users/Nathan/Desktop/data-comm-ui/src/App.js\";\nimport React, { useReducer } from 'react';\nimport MiniDrawer from \"./drawer\";\nimport { Provider } from './globalState'; // const dataInitState = {data: {}, setData: undefined};\n// const portInitState = {port: '', setPort: undefined};\n// const DataStateContext = createContext(dataInitState);\n// const PortStateContext = createContext(portInitState);\n// /**\n//  * Global State provider & hooks\n//  */\n// const GlobalStateProvider = ({ children }) => {\n//   const [data, setData] = React.useState(dataInitState.data);\n//   const [port, setPort] = React.useState(portInitState.port);\n//   const dataContextValue = React.useMemo(() => ({data, setData}), [data]);\n//   const portContextValue = React.useMemo(() => ({port, setPort}), [port]);\n//   return (\n//     <DataStateContext.Provider value={dataContextValue}>\n//       <PortStateContext.Provider value={portContextValue}>\n//           {children}\n//       </PortStateContext.Provider>\n//     </DataStateContext.Provider>\n//   );\n// };\n// export const useDataState = () => React.useContext(DataStateContext);\n// export const usePortState = () => React.useContext(PortStateContext);\n// const initialGlobalState = {\n//   data: {},\n//   port: ''\n// };\n// /**\n//  * Global State provider & hooks\n//  */\n// const useValue = () =>\n//   React.useReducer(\n//     (state, newValue) => ({ ...state, ...newValue }),\n//     initialGlobalState\n//   );\n// const GlobalStateProvider = ({ children }) => (\n//   <Provider useValue={useValue}>{children}</Provider>\n// );\n\nconst App = () => {\n  return /*#__PURE__*/React.createElement(Provider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MiniDrawer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default App; // class App extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       version: 0,\n//       flags: 3,\n//       size: 2,\n//       checksum: 4,\n//       data: {},\n//       time: 0,\n//       test: [0,1,2,3]\n//     }\n//   };\n//   // componentDidMount() {\n//   //   fetch('/time/'+this.state.test).then(res => res.json()).then(data => {\n//   //     this.setState({time: data.time, test: data.test});\n//   //   }, [])\n//   // }\n//   // componentDidUpdate() {\n//   //   fetch('/time/'+this.state.test).then(res => res.json()).then(data => {\n//   //     this.setState({time: data.time, test: data.test});\n//   //   }, []);\n//   //   // console.log(this.state.version);\n//   // }\n//   render() {\n//     return (\n//       <GlobalStateProvider>\n//       <div>\n//         <MiniDrawer/>\n//       </div>\n//       </GlobalStateProvider>\n//     );\n//   }\n// }\n// export default App;","map":{"version":3,"sources":["/Users/Nathan/Desktop/data-comm-ui/src/App.js"],"names":["React","useReducer","MiniDrawer","Provider","App"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,UAAP,MAAuB,UAAvB;AACA,SAASC,QAAT,QAAyB,eAAzB,C,CAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAEhB,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAOD,CATD;;AAWA,eAAeA,GAAf,C,CAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useReducer } from 'react';\nimport MiniDrawer from \"./drawer\";\nimport { Provider } from './globalState';\n\n// const dataInitState = {data: {}, setData: undefined};\n// const portInitState = {port: '', setPort: undefined};\n\n// const DataStateContext = createContext(dataInitState);\n// const PortStateContext = createContext(portInitState);\n\n// /**\n//  * Global State provider & hooks\n//  */\n// const GlobalStateProvider = ({ children }) => {\n//   const [data, setData] = React.useState(dataInitState.data);\n//   const [port, setPort] = React.useState(portInitState.port);\n//   const dataContextValue = React.useMemo(() => ({data, setData}), [data]);\n//   const portContextValue = React.useMemo(() => ({port, setPort}), [port]);\n\n//   return (\n//     <DataStateContext.Provider value={dataContextValue}>\n//       <PortStateContext.Provider value={portContextValue}>\n//           {children}\n//       </PortStateContext.Provider>\n//     </DataStateContext.Provider>\n//   );\n// };\n\n// export const useDataState = () => React.useContext(DataStateContext);\n// export const usePortState = () => React.useContext(PortStateContext);\n\n// const initialGlobalState = {\n//   data: {},\n//   port: ''\n// };\n\n// /**\n//  * Global State provider & hooks\n//  */\n// const useValue = () =>\n//   React.useReducer(\n//     (state, newValue) => ({ ...state, ...newValue }),\n//     initialGlobalState\n//   );\n\n// const GlobalStateProvider = ({ children }) => (\n//   <Provider useValue={useValue}>{children}</Provider>\n// );\n\nconst App = () => {\n\n  return ( \n    <Provider>\n      <div>\n        <MiniDrawer/>\n      </div>\n    </Provider>\n  )\n}\n\nexport default App;\n\n\n// class App extends React.Component {\n\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       version: 0,\n//       flags: 3,\n//       size: 2,\n//       checksum: 4,\n//       data: {},\n//       time: 0,\n//       test: [0,1,2,3]\n//     }\n//   };\n\n//   // componentDidMount() {\n//   //   fetch('/time/'+this.state.test).then(res => res.json()).then(data => {\n//   //     this.setState({time: data.time, test: data.test});\n//   //   }, [])\n//   // }\n\n//   // componentDidUpdate() {\n//   //   fetch('/time/'+this.state.test).then(res => res.json()).then(data => {\n//   //     this.setState({time: data.time, test: data.test});\n//   //   }, []);\n//   //   // console.log(this.state.version);\n//   // }\n\n//   render() {\n//     return (\n//       <GlobalStateProvider>\n//       <div>\n//         <MiniDrawer/>\n//       </div>\n//       </GlobalStateProvider>\n//     );\n//   }\n// }\n\n// export default App;"]},"metadata":{},"sourceType":"module"}