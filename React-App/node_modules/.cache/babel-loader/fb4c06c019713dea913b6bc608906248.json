{"ast":null,"code":"var _jsxFileName = \"/Users/Nathan/Desktop/data-comm-ui/src/dataDropdown.js\";\nimport React, { useEffect } from 'react';\nimport Select from 'react-select';\nimport { useTracked } from './globalState';\n\nfunction DataDropdown(props) {\n  const intitialState = {\n    options: [],\n    selected: []\n  };\n  const [ddState, setddState] = useState(intitialState);\n  const [state, setState] = useTracked();\n  useEffect(() => {\n    var options = [];\n    Object.keys(state.data).forEach(key => options.push({\n      value: key,\n      label: key\n    }));\n    setddState({\n      options: options\n    });\n  }, [state]);\n  return /*#__PURE__*/React.createElement(Select // defaultValue={[labels[1]]}\n  , {\n    isMulti: true,\n    name: \"labels\",\n    options: ddState.options,\n    className: \"basic-multi-select\",\n    classNamePrefix: \"select\",\n    onChange: selectedOptions => setddState({\n      selected: selectedOptions.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  });\n}\n\nexport default DataDropdown; // class DataDropDown extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       options: [],\n//       selected: []\n//     }\n//   };\n//   setOptions() {\n//     var options = DataDropdownHelper()\n//     this.setState({options: options});\n//     if (this.props.onChange) {\n//       this.props.onChange(this.state);\n//     }\n//   }\n//   componentDidMount() {\n//     this.setOptions();\n//   }\n//   componentDidUpdate() {\n//     this.setOptions();\n//   }\n//   onChangeFunc = selectedOptions => this.setState({selected: selectedOptions.value});\n//   // TODO: pass selected options to graph!\n//   render() {\n//     return (<Select\n//             // defaultValue={[labels[1]]}\n//             isMulti\n//             name=\"labels\"\n//             options={this.state.options}\n//             className=\"basic-multi-select\"\n//             classNamePrefix=\"select\"\n//             onChange={this.onChangeFunc}\n//           />\n//     );\n//   }\n// }\n// export default DataDropDown;","map":{"version":3,"sources":["/Users/Nathan/Desktop/data-comm-ui/src/dataDropdown.js"],"names":["React","useEffect","Select","useTracked","DataDropdown","props","intitialState","options","selected","ddState","setddState","useState","state","setState","Object","keys","data","forEach","key","push","value","label","selectedOptions"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,UAAT,QAA2B,eAA3B;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAMC,aAAa,GAAG;AACpBC,IAAAA,OAAO,EAAE,EADW;AAEpBC,IAAAA,QAAQ,EAAE;AAFU,GAAtB;AAKA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBC,QAAQ,CAACL,aAAD,CAAtC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBV,UAAU,EAApC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,OAAO,GAAG,EAAd;AACAO,IAAAA,MAAM,CAACC,IAAP,CAAYH,KAAK,CAACI,IAAlB,EAAwBC,OAAxB,CAAgCC,GAAG,IAAIX,OAAO,CAACY,IAAR,CACrC;AACEC,MAAAA,KAAK,EAAEF,GADT;AAEEG,MAAAA,KAAK,EAAEH;AAFT,KADqC,CAAvC;AAOAR,IAAAA,UAAU,CAAC;AAACH,MAAAA,OAAO,EAAEA;AAAV,KAAD,CAAV;AACD,GAVQ,EAUN,CAACK,KAAD,CAVM,CAAT;AAYA,sBAAQ,oBAAC,MAAD,CACN;AADM;AAEN,IAAA,OAAO,MAFD;AAGN,IAAA,IAAI,EAAC,QAHC;AAIN,IAAA,OAAO,EAAEH,OAAO,CAACF,OAJX;AAKN,IAAA,SAAS,EAAC,oBALJ;AAMN,IAAA,eAAe,EAAC,QANV;AAON,IAAA,QAAQ,EAAGe,eAAD,IAAqBZ,UAAU,CAAC;AAACF,MAAAA,QAAQ,EAAEc,eAAe,CAACF;AAA3B,KAAD,CAPnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAR;AAUD;;AAED,eAAehB,YAAf,C,CAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useEffect } from 'react';\nimport Select from 'react-select';\nimport { useTracked } from './globalState';\n\nfunction DataDropdown(props) {\n  const intitialState = {\n    options: [],\n    selected: [],\n  }\n\n  const [ddState, setddState] = useState(intitialState);\n  const [state, setState] = useTracked();\n\n  useEffect(() => {\n    var options = [];\n    Object.keys(state.data).forEach(key => options.push(\n      {\n        value: key,\n        label: key\n      }\n    ));\n\n    setddState({options: options});\n  }, [state]);\n\n  return (<Select\n    // defaultValue={[labels[1]]}\n    isMulti\n    name=\"labels\"\n    options={ddState.options}\n    className=\"basic-multi-select\"\n    classNamePrefix=\"select\"\n    onChange={(selectedOptions) => setddState({selected: selectedOptions.value})}\n  />\n  );\n}\n\nexport default DataDropdown;\n\n\n// class DataDropDown extends React.Component {\n  \n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       options: [],\n//       selected: []\n//     }\n//   };\n\n//   setOptions() {\n//     var options = DataDropdownHelper()\n//     this.setState({options: options});\n\n//     if (this.props.onChange) {\n//       this.props.onChange(this.state);\n//     }\n//   }\n\n//   componentDidMount() {\n//     this.setOptions();\n//   }\n\n//   componentDidUpdate() {\n//     this.setOptions();\n//   }\n\n//   onChangeFunc = selectedOptions => this.setState({selected: selectedOptions.value});\n\n//   // TODO: pass selected options to graph!\n\n//   render() {\n//     return (<Select\n//             // defaultValue={[labels[1]]}\n//             isMulti\n//             name=\"labels\"\n//             options={this.state.options}\n//             className=\"basic-multi-select\"\n//             classNamePrefix=\"select\"\n//             onChange={this.onChangeFunc}\n//           />\n//     );\n//   }\n// }\n\n// export default DataDropDown;"]},"metadata":{},"sourceType":"module"}