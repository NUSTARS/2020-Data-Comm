{"ast":null,"code":"var _jsxFileName = \"/Users/Nathan/Desktop/data-comm-ui/src/graph.js\";\nimport React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Chart from \"./chart\";\nimport { Resizable, ResizableBox } from 'react-resizable';\nimport * as zoom from 'chartjs-plugin-zoom';\nimport GraphHelper from './graphHelper';\n\nconst styles = theme => ({\n  \"chart-container\": {\n    maxHeight: 600,\n    overflow: \"hidden\"\n  }\n});\n\nclass Graph extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: typeof props.selected === 'undefined' ? [] : props.selected,\n      lineChartData: {\n        // labels: [],\n        datasets: []\n      },\n      lineChartOptions: {\n        responsive: true,\n        maintainAspectRatio: false,\n        tooltips: {\n          enabled: true\n        },\n        scales: {\n          xAxes: [{\n            ticks: {\n              autoSkip: true,\n              suggestedMax: 100\n            }\n          }]\n        },\n        plugins: {\n          zoom: {\n            pan: {\n              enabled: true,\n              mode: 'x',\n              speed: 100\n            },\n            zoom: {\n              enabled: true,\n              mode: 'x',\n              speed: 500,\n              sensitivity: 0.5\n            }\n          }\n        }\n      }\n    };\n  }\n\n  updateState() {\n    var newData = GraphHelper();\n    const newChartData = { ...this.state.lineChartData,\n      datasets: newData[0]\n    };\n    const newChartOptions = { ...this.state.lineChartOptions,\n      scales: { ...this.state.lineChartOptions.scales,\n        yAxes: newData[1]\n      }\n    };\n    this.setState({\n      lineChartData: newChartData,\n      lineChartOptions: newChartOptions\n    });\n  }\n\n  componentDidMount() {\n    this.updateState();\n  }\n\n  componentDidUpdate() {\n    this.updateState();\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      xs: 12,\n      style: {\n        height: 400\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      data: this.state.lineChartData,\n      options: this.state.lineChartOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default withStyles(styles, {\n  withTheme: true\n})(Graph); // export default Graph;","map":{"version":3,"sources":["/Users/Nathan/Desktop/data-comm-ui/src/graph.js"],"names":["React","withStyles","Grid","makeStyles","Chart","Resizable","ResizableBox","zoom","GraphHelper","styles","theme","maxHeight","overflow","Graph","Component","constructor","props","state","selected","lineChartData","datasets","lineChartOptions","responsive","maintainAspectRatio","tooltips","enabled","scales","xAxes","ticks","autoSkip","suggestedMax","plugins","pan","mode","speed","sensitivity","updateState","newData","newChartData","newChartOptions","yAxes","setState","componentDidMount","componentDidUpdate","render","classes","height","withTheme"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Chart from \"./chart\";\nimport { Resizable, ResizableBox } from 'react-resizable';\nimport * as zoom from 'chartjs-plugin-zoom';\nimport GraphHelper from './graphHelper';\n\nconst styles = theme => ({\n  \"chart-container\": {\n    maxHeight: 600,\n    overflow: \"hidden\"\n  }\n});\n\nclass Graph extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: (typeof props.selected === 'undefined') ? [] : props.selected,\n      lineChartData: {\n        // labels: [],\n        datasets: []\n      },\n      lineChartOptions: {\n        responsive: true,\n        maintainAspectRatio: false,\n        tooltips: {\n          enabled: true\n        },\n        scales: {\n          xAxes: [\n            {\n              ticks: {\n                autoSkip: true,\n                suggestedMax: 100\n              }\n            }\n          ]\n        },\n        plugins: {\n          zoom: {\n              pan: {\n                  enabled: true,\n                  mode: 'x',\n                  speed: 100,\n              },\n              zoom: {\n                  enabled: true,\n                  mode: 'x',\n                  speed: 500,\n                  sensitivity: 0.5,\n              }\n          }\n      }\n      }\n    };\n  }\n\n  updateState() {\n        var newData = GraphHelper()\n\n        const newChartData = {\n          ...this.state.lineChartData,\n          datasets: newData[0]\n        }\n\n        const newChartOptions = {\n          ...this.state.lineChartOptions,\n          scales: {...this.state.lineChartOptions.scales, yAxes: newData[1]}\n        }\n\n        this.setState({lineChartData: newChartData, lineChartOptions: newChartOptions})\n  }\n\n  componentDidMount() {\n    this.updateState();\n  }\n\n  componentDidUpdate() {\n    this.updateState();\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div xs={12} style={{height: 400}}>\n        <Chart \n          data={this.state.lineChartData}\n          options={this.state.lineChartOptions}\n        />\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(Graph);\n// export default Graph;"]},"metadata":{},"sourceType":"module"}