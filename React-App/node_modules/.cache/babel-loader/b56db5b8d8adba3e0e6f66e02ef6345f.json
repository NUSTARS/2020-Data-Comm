{"ast":null,"code":"import { useState } from 'react';\nimport { createContainer } from 'react-tracked';\nconst initialState = {\n  data: {},\n  port: ''\n};\n\nconst useValue = () => useState(initialState);\n\nexport const {\n  Provider,\n  useTracked\n} = createContainer(useValue); // import React, { createContext } from \"react\";\n// const dataInitState = {data: {}, setData: undefined};\n// const portInitState = {port: '', setPort: undefined};\n// const DataStateContext = createContext(dataInitState);\n// const PortStateContext = createContext(portInitState);\n// /**\n//  * Global State provider & hooks\n//  */\n// const GlobalStateProvider = ({ children }) => {\n//   const [data, setData] = React.useState(dataInitState.data);\n//   const [port, setPort] = React.useState(portInitState.port);\n//   const dataContextValue = React.useMemo(() => ({data, setData}), [data]);\n//   const portContextValue = React.useMemo(() => ({port, setPort}), [port]);\n//   return (\n//     <DataStateContext.Provider value={dataContextValue}>\n//       <PortStateContext.Provider value={portContextValue}>\n//           {(typeof children === 'undefined') ? {} : children}\n//       </PortStateContext.Provider>\n//     </DataStateContext.Provider>\n//   );\n// };\n// export const useDataState = () => React.useContext(DataStateContext);\n// export const usePortState = () => React.useContext(PortStateContext);\n// export default GlobalStateProvider;","map":{"version":3,"sources":["/Users/Nathan/Desktop/data-comm-ui/src/globalState.js"],"names":["useState","createContainer","initialState","data","port","useValue","Provider","useTracked"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,SAASC,eAAT,QAAgC,eAAhC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,IAAI,EAAE;AAFa,CAArB;;AAKA,MAAMC,QAAQ,GAAG,MAAML,QAAQ,CAACE,YAAD,CAA/B;;AAEA,OAAO,MAAM;AAAEI,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,IAA2BN,eAAe,CAACI,QAAD,CAAhD,C,CAEP;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import { useState } from 'react';\n\nimport { createContainer } from 'react-tracked';\n\nconst initialState = {\n  data: {},\n  port: ''\n};\n\nconst useValue = () => useState(initialState);\n\nexport const { Provider, useTracked } = createContainer(useValue);\n\n// import React, { createContext } from \"react\";\n\n// const dataInitState = {data: {}, setData: undefined};\n// const portInitState = {port: '', setPort: undefined};\n\n// const DataStateContext = createContext(dataInitState);\n// const PortStateContext = createContext(portInitState);\n\n// /**\n//  * Global State provider & hooks\n//  */\n// const GlobalStateProvider = ({ children }) => {\n//   const [data, setData] = React.useState(dataInitState.data);\n//   const [port, setPort] = React.useState(portInitState.port);\n//   const dataContextValue = React.useMemo(() => ({data, setData}), [data]);\n//   const portContextValue = React.useMemo(() => ({port, setPort}), [port]);\n\n//   return (\n//     <DataStateContext.Provider value={dataContextValue}>\n//       <PortStateContext.Provider value={portContextValue}>\n//           {(typeof children === 'undefined') ? {} : children}\n//       </PortStateContext.Provider>\n//     </DataStateContext.Provider>\n//   );\n// };\n\n// export const useDataState = () => React.useContext(DataStateContext);\n// export const usePortState = () => React.useContext(PortStateContext);\n// export default GlobalStateProvider;"]},"metadata":{},"sourceType":"module"}