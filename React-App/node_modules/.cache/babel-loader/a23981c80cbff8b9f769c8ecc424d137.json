{"ast":null,"code":"var _jsxFileName = \"/Users/Nathan/Desktop/data-comm-ui/src/uploadButton.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useTracked } from './globalState';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  },\n  input: {\n    display: 'none'\n  }\n}));\nexport default function UploadButton() {\n  const classes = useStyles();\n  const [state, setState] = useTracked();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    accept: \"image/*\",\n    className: classes.input,\n    id: \"contained-button-file\",\n    type: \"file\",\n    onChange: async event => {\n      const files = event.target.files;\n      const formData = new FormData();\n      formData.append('myFile', files[0]);\n      fetch('/upload-data/', {\n        method: 'POST',\n        'Content-Type': 'multipart/form-data',\n        body: formData\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n      }).catch(error => {\n        console.error(error);\n      });\n\n      async function getud() {\n        const response = await fetch('/request-upload-data/', {});\n        const json = await response.json();\n\n        if (json.length === 0) {\n          return 0;\n        } else {\n          return json;\n        }\n      }\n\n      var ud = await getud();\n\n      if (!ud) {\n        return;\n      }\n\n      var mutdata = state.uploadData;\n      console.log(ud);\n      d.forEach(el => Object.entries(el['data']).forEach(([key, val]) => {\n        key in mutdata ? mutdata[key].append([el['time'], val]) : mutdata[key] = [[el['time'], val]];\n      } // data[key][el[time]] = val\n      ));\n      setState({\n        uploadData: mutdata\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"contained-button-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Upload\")));\n}","map":{"version":3,"sources":["/Users/Nathan/Desktop/data-comm-ui/src/uploadButton.js"],"names":["React","useState","useEffect","useTracked","makeStyles","Button","IconButton","PhotoCamera","useStyles","theme","root","margin","spacing","input","display","UploadButton","classes","state","setState","event","files","target","formData","FormData","append","fetch","method","body","then","response","json","data","console","log","catch","error","getud","length","ud","mutdata","uploadData","d","forEach","el","Object","entries","key","val"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useTracked } from './globalState';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: 'none',\n  },\n}));\n\nexport default function UploadButton() {\n  const classes = useStyles();\n  const [state, setState] = useTracked();\n\n  return (\n    <div className={classes.root}>\n      <input\n        accept=\"image/*\"\n        className={classes.input}\n        id=\"contained-button-file\"\n        type=\"file\"\n        onChange={async (event) => {\n          const files = event.target.files\n          const formData = new FormData()\n          formData.append('myFile', files[0])\n\n          fetch('/upload-data/', {\n            method: 'POST',\n            'Content-Type': 'multipart/form-data',\n            body: formData\n          })\n          .then(response => response.json())\n          .then(data => {\n            console.log(data)\n          })\n          .catch(error => {\n            console.error(error)\n          })\n\n          async function getud() {\n            const response = await fetch('/request-upload-data/', {});\n            const json = await response.json();\n        \n            if (json.length === 0) { return 0; }\n            else { return json; }\n          }\n\n          var ud = await getud();\n\n          if ( !ud ) { return; }\n\n          var mutdata = state.uploadData;\n          console.log(ud);\n          d.forEach(el => \n            Object.entries(el['data']).forEach(([key, val]) => \n              { (key in mutdata) ? mutdata[key].append([el['time'], val]) : mutdata[key] = [[el['time'], val]]; }\n              // data[key][el[time]] = val\n              )\n            );\n\n          setState({uploadData: mutdata});\n        }}\n      />\n      <label htmlFor=\"contained-button-file\">\n        <Button variant=\"contained\" color=\"primary\" component=\"span\">\n          Upload\n        </Button>\n      </label>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}