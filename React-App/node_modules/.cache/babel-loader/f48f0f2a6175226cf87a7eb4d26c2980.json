{"ast":null,"code":"import { useEffect, useLayoutEffect, useRef, useDebugValue } from 'react';\nconst isClient = typeof window !== 'undefined' && !/ServerSideRendering/.test(window.navigator && window.navigator.userAgent);\nexport const useIsomorphicLayoutEffect = isClient ? useLayoutEffect : useEffect;\n\nconst affectedToPathList = (state, affected) => {\n  const list = [];\n\n  const walk = (obj, path) => {\n    const used = affected.get(obj);\n\n    if (used) {\n      used.forEach(key => {\n        walk(obj[key], path ? [...path, key] : [key]);\n      });\n    } else if (path) {\n      list.push(path);\n    }\n  };\n\n  walk(state);\n  return list;\n};\n\nexport const useAffectedDebugValue = (state, affected) => {\n  const pathList = useRef(null);\n  useEffect(() => {\n    pathList.current = affectedToPathList(state, affected);\n  });\n  useDebugValue(pathList.current);\n};","map":{"version":3,"sources":["/Users/Nathan/Desktop/data-comm-ui/node_modules/react-tracked/src/utils.js"],"names":["useEffect","useLayoutEffect","useRef","useDebugValue","isClient","window","test","navigator","userAgent","useIsomorphicLayoutEffect","affectedToPathList","state","affected","list","walk","obj","path","used","get","forEach","key","push","useAffectedDebugValue","pathList","current"],"mappings":"AAAA,SACEA,SADF,EAEEC,eAFF,EAGEC,MAHF,EAIEC,aAJF,QAKO,OALP;AAOA,MAAMC,QAAQ,GACZ,OAAOC,MAAP,KAAkB,WAAlB,IACG,CAAC,sBAAsBC,IAAtB,CAA2BD,MAAM,CAACE,SAAP,IAAoBF,MAAM,CAACE,SAAP,CAAiBC,SAAhE,CAFN;AAKA,OAAO,MAAMC,yBAAyB,GAAGL,QAAQ,GAAGH,eAAH,GAAqBD,SAA/D;;AAEP,MAAMU,kBAAkB,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC9C,QAAMC,IAAI,GAAG,EAAb;;AACA,QAAMC,IAAI,GAAG,CAACC,GAAD,EAAMC,IAAN,KAAe;AAC1B,UAAMC,IAAI,GAAGL,QAAQ,CAACM,GAAT,CAAaH,GAAb,CAAb;;AACA,QAAIE,IAAJ,EAAU;AACRA,MAAAA,IAAI,CAACE,OAAL,CAAcC,GAAD,IAAS;AACpBN,QAAAA,IAAI,CAACC,GAAG,CAACK,GAAD,CAAJ,EAAWJ,IAAI,GAAG,CAAC,GAAGA,IAAJ,EAAUI,GAAV,CAAH,GAAoB,CAACA,GAAD,CAAnC,CAAJ;AACD,OAFD;AAGD,KAJD,MAIO,IAAIJ,IAAJ,EAAU;AACfH,MAAAA,IAAI,CAACQ,IAAL,CAAUL,IAAV;AACD;AACF,GATD;;AAUAF,EAAAA,IAAI,CAACH,KAAD,CAAJ;AACA,SAAOE,IAAP;AACD,CAdD;;AAgBA,OAAO,MAAMS,qBAAqB,GAAG,CAACX,KAAD,EAAQC,QAAR,KAAqB;AACxD,QAAMW,QAAQ,GAAGrB,MAAM,CAAC,IAAD,CAAvB;AACAF,EAAAA,SAAS,CAAC,MAAM;AACduB,IAAAA,QAAQ,CAACC,OAAT,GAAmBd,kBAAkB,CAACC,KAAD,EAAQC,QAAR,CAArC;AACD,GAFQ,CAAT;AAGAT,EAAAA,aAAa,CAACoB,QAAQ,CAACC,OAAV,CAAb;AACD,CANM","sourcesContent":["import {\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useDebugValue,\n} from 'react';\n\nconst isClient = (\n  typeof window !== 'undefined'\n  && !/ServerSideRendering/.test(window.navigator && window.navigator.userAgent)\n);\n\nexport const useIsomorphicLayoutEffect = isClient ? useLayoutEffect : useEffect;\n\nconst affectedToPathList = (state, affected) => {\n  const list = [];\n  const walk = (obj, path) => {\n    const used = affected.get(obj);\n    if (used) {\n      used.forEach((key) => {\n        walk(obj[key], path ? [...path, key] : [key]);\n      });\n    } else if (path) {\n      list.push(path);\n    }\n  };\n  walk(state);\n  return list;\n};\n\nexport const useAffectedDebugValue = (state, affected) => {\n  const pathList = useRef(null);\n  useEffect(() => {\n    pathList.current = affectedToPathList(state, affected);\n  });\n  useDebugValue(pathList.current);\n};\n"]},"metadata":{},"sourceType":"module"}