{"ast":null,"code":"var _jsxFileName = \"/Users/Nathan/Desktop/data-comm-ui/src/App.js\";\nimport React, { createContext } from \"react\";\nimport MiniDrawer from \"./drawer\"; // import GlobalStateProvider from './globalState';\n\nimport { Provider, useTracked } from \"react-tracked\"; // const dataInitState = {data: {}, setData: undefined};\n// const portInitState = {port: '', setPort: undefined};\n// const DataStateContext = createContext(dataInitState);\n// const PortStateContext = createContext(portInitState);\n// /**\n//  * Global State provider & hooks\n//  */\n// const GlobalStateProvider = ({ children }) => {\n//   const [data, setData] = React.useState(dataInitState.data);\n//   const [port, setPort] = React.useState(portInitState.port);\n//   const dataContextValue = React.useMemo(() => ({data, setData}), [data]);\n//   const portContextValue = React.useMemo(() => ({port, setPort}), [port]);\n//   return (\n//     <DataStateContext.Provider value={dataContextValue}>\n//       <PortStateContext.Provider value={portContextValue}>\n//           {children}\n//       </PortStateContext.Provider>\n//     </DataStateContext.Provider>\n//   );\n// };\n// export const useDataState = () => React.useContext(DataStateContext);\n// export const usePortState = () => React.useContext(PortStateContext);\n\nconst initialGlobalState = {\n  data: {},\n  port: ''\n};\n/**\n * Global State provider & hooks\n */\n\nconst useValue = () => React.useReducer((state, newValue) => ({ ...state,\n  ...newValue\n}), initialGlobalState);\n\nconst GlobalStateProvider = ({\n  children\n}) => /*#__PURE__*/React.createElement(Provider, {\n  useValue: useValue,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 3\n  }\n}, children);\n\nconst App = () => {\n  return /*#__PURE__*/React.createElement(GlobalStateProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MiniDrawer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default App; // class App extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       version: 0,\n//       flags: 3,\n//       size: 2,\n//       checksum: 4,\n//       data: {},\n//       time: 0,\n//       test: [0,1,2,3]\n//     }\n//   };\n//   // componentDidMount() {\n//   //   fetch('/time/'+this.state.test).then(res => res.json()).then(data => {\n//   //     this.setState({time: data.time, test: data.test});\n//   //   }, [])\n//   // }\n//   // componentDidUpdate() {\n//   //   fetch('/time/'+this.state.test).then(res => res.json()).then(data => {\n//   //     this.setState({time: data.time, test: data.test});\n//   //   }, []);\n//   //   // console.log(this.state.version);\n//   // }\n//   render() {\n//     return (\n//       <GlobalStateProvider>\n//       <div>\n//         <MiniDrawer/>\n//       </div>\n//       </GlobalStateProvider>\n//     );\n//   }\n// }\n// export default App;","map":{"version":3,"sources":["/Users/Nathan/Desktop/data-comm-ui/src/App.js"],"names":["React","createContext","MiniDrawer","Provider","useTracked","initialGlobalState","data","port","useValue","useReducer","state","newValue","GlobalStateProvider","children","App"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,UAAP,MAAuB,UAAvB,C,CACA;;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,eAArC,C,CAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,MAAMC,kBAAkB,GAAG;AACzBC,EAAAA,IAAI,EAAE,EADmB;AAEzBC,EAAAA,IAAI,EAAE;AAFmB,CAA3B;AAKA;;;;AAGA,MAAMC,QAAQ,GAAG,MACfR,KAAK,CAACS,UAAN,CACE,CAACC,KAAD,EAAQC,QAAR,MAAsB,EAAE,GAAGD,KAAL;AAAY,KAAGC;AAAf,CAAtB,CADF,EAEEN,kBAFF,CADF;;AAMA,MAAMO,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBAC1B,oBAAC,QAAD;AAAU,EAAA,QAAQ,EAAEL,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA+BK,QAA/B,CADF;;AAIA,MAAMC,GAAG,GAAG,MAAM;AAEhB,sBACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAOD,CATD;;AAWA,eAAeA,GAAf,C,CAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { createContext } from \"react\";\nimport MiniDrawer from \"./drawer\";\n// import GlobalStateProvider from './globalState';\nimport { Provider, useTracked } from \"react-tracked\";\n\n// const dataInitState = {data: {}, setData: undefined};\n// const portInitState = {port: '', setPort: undefined};\n\n// const DataStateContext = createContext(dataInitState);\n// const PortStateContext = createContext(portInitState);\n\n// /**\n//  * Global State provider & hooks\n//  */\n// const GlobalStateProvider = ({ children }) => {\n//   const [data, setData] = React.useState(dataInitState.data);\n//   const [port, setPort] = React.useState(portInitState.port);\n//   const dataContextValue = React.useMemo(() => ({data, setData}), [data]);\n//   const portContextValue = React.useMemo(() => ({port, setPort}), [port]);\n\n//   return (\n//     <DataStateContext.Provider value={dataContextValue}>\n//       <PortStateContext.Provider value={portContextValue}>\n//           {children}\n//       </PortStateContext.Provider>\n//     </DataStateContext.Provider>\n//   );\n// };\n\n// export const useDataState = () => React.useContext(DataStateContext);\n// export const usePortState = () => React.useContext(PortStateContext);\n\nconst initialGlobalState = {\n  data: {},\n  port: ''\n};\n\n/**\n * Global State provider & hooks\n */\nconst useValue = () =>\n  React.useReducer(\n    (state, newValue) => ({ ...state, ...newValue }),\n    initialGlobalState\n  );\n\nconst GlobalStateProvider = ({ children }) => (\n  <Provider useValue={useValue}>{children}</Provider>\n);\n\nconst App = () => {\n\n  return ( \n    <GlobalStateProvider>\n      <div>\n        <MiniDrawer/>\n      </div>\n    </GlobalStateProvider>\n  )\n}\n\nexport default App;\n\n\n// class App extends React.Component {\n\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       version: 0,\n//       flags: 3,\n//       size: 2,\n//       checksum: 4,\n//       data: {},\n//       time: 0,\n//       test: [0,1,2,3]\n//     }\n//   };\n\n//   // componentDidMount() {\n//   //   fetch('/time/'+this.state.test).then(res => res.json()).then(data => {\n//   //     this.setState({time: data.time, test: data.test});\n//   //   }, [])\n//   // }\n\n//   // componentDidUpdate() {\n//   //   fetch('/time/'+this.state.test).then(res => res.json()).then(data => {\n//   //     this.setState({time: data.time, test: data.test});\n//   //   }, []);\n//   //   // console.log(this.state.version);\n//   // }\n\n//   render() {\n//     return (\n//       <GlobalStateProvider>\n//       <div>\n//         <MiniDrawer/>\n//       </div>\n//       </GlobalStateProvider>\n//     );\n//   }\n// }\n\n// export default App;"]},"metadata":{},"sourceType":"module"}