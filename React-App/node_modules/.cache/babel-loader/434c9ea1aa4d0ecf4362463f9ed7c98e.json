{"ast":null,"code":"var _jsxFileName = \"/Users/Nathan/Desktop/data-comm-ui/src/App.js\";\nimport React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Chart from \"./chart\";\n\nconst styles = theme => ({\n  \"chart-container\": {\n    height: 400\n  }\n});\n\nlet updateInterval = 1000;\nlet numTicks = 20;\nlet typeData = \"Live\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      meta: {\n        ticks: numTicks,\n        lab: [],\n        dat: []\n      },\n      lineChartData: {\n        labels: [],\n        datasets: [{\n          type: \"line\",\n          label: typeData,\n          backgroundColor: \"rgba(0, 0, 0, 1)\",\n          borderColor: this.props.theme.palette.primary.main,\n          pointBackgroundColor: this.props.theme.palette.secondary.main,\n          pointBorderColor: this.props.theme.palette.secondary.main,\n          borderWidth: \"2\",\n          lineTension: 0.45,\n          data: []\n        }]\n      },\n      lineChartOptions: {\n        responsive: true,\n        maintainAspectRatio: false,\n        tooltips: {\n          enabled: true\n        },\n        scales: {\n          xAxes: [{\n            ticks: {\n              autoSkip: true,\n              maxTicksLimit: numTicks\n            }\n          }]\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    setInterval(this.updateChart = e => {\n      const newDat = this.state.meta.dat;\n      const newLab = this.state.meta.lab;\n      const newNum = Math.round(Math.random() * 100);\n      newDat.push(newNum);\n      newLab.push(this.state.meta.lab.length + 1);\n      const newMeta = { ...this.state.meta,\n        lab: newLab,\n        dat: newDat\n      };\n      this.setState({\n        meta: newMeta\n      });\n      const oldDataSet = this.state.lineChartData.datasets[0];\n      const newDataSet = { ...oldDataSet\n      };\n      newDataSet.data.push(newNum);\n\n      if (newDataSet.data.length > this.state.meta.ticks) {\n        newDataSet.data.shift();\n      }\n\n      const newChartData = { ...this.state.lineChartData,\n        datasets: [newDataSet],\n        labels: this.state.meta.lab.slice(this.state.meta.ticks > this.state.meta.lab.length ? -this.state.meta.lab.length : -this.state.meta.ticks)\n      };\n      this.setState({\n        lineChartData: newChartData\n      });\n      console.log(this.state.lineChartData.labels);\n    }, updateInterval);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes[\"chart-container\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      data: this.state.lineChartData,\n      options: this.state.lineChartOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default withStyles(styles, {\n  withTheme: true\n})(App);","map":{"version":3,"sources":["/Users/Nathan/Desktop/data-comm-ui/src/App.js"],"names":["React","withStyles","Chart","styles","theme","height","updateInterval","numTicks","typeData","App","Component","state","meta","ticks","lab","dat","lineChartData","labels","datasets","type","label","backgroundColor","borderColor","props","palette","primary","main","pointBackgroundColor","secondary","pointBorderColor","borderWidth","lineTension","data","lineChartOptions","responsive","maintainAspectRatio","tooltips","enabled","scales","xAxes","autoSkip","maxTicksLimit","componentDidMount","setInterval","updateChart","e","newDat","newLab","newNum","Math","round","random","push","length","newMeta","setState","oldDataSet","newDataSet","shift","newChartData","slice","console","log","render","classes","withTheme"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Chart from \"./chart\";\n\nconst styles = theme => ({\n  \"chart-container\": {\n    height: 400\n  }\n});\n\nlet updateInterval = 1000;\nlet numTicks = 20;\nlet typeData = \"Live\";\n\nclass App extends React.Component {\n  state = {\n    meta: {\n      ticks: numTicks,\n      lab: [],\n      dat: []\n    },\n    lineChartData: {\n      labels: [],\n      datasets: [\n        {\n          type: \"line\",\n          label: typeData,\n          backgroundColor: \"rgba(0, 0, 0, 1)\",\n          borderColor: this.props.theme.palette.primary.main,\n          pointBackgroundColor: this.props.theme.palette.secondary.main,\n          pointBorderColor: this.props.theme.palette.secondary.main,\n          borderWidth: \"2\",\n          lineTension: 0.45,\n          data: []\n        }\n      ]\n    },\n    lineChartOptions: {\n      responsive: true,\n      maintainAspectRatio: false,\n      tooltips: {\n        enabled: true\n      },\n      scales: {\n        xAxes: [\n          {\n            ticks: {\n              autoSkip: true,\n              maxTicksLimit: numTicks\n            }\n          }\n        ]\n      }\n    }\n  };\n\n  componentDidMount() {\n    setInterval( this.updateChart = e => {\n      const newDat = this.state.meta.dat;\n      const newLab = this.state.meta.lab;\n\n      const newNum = Math.round(Math.random()*100);\n\n      newDat.push(newNum);\n      newLab.push(this.state.meta.lab.length+1);\n\n      const newMeta = {...this.state.meta, lab: newLab, dat: newDat}\n      this.setState({meta: newMeta})\n\n      const oldDataSet = this.state.lineChartData.datasets[0];\n      const newDataSet = { ...oldDataSet };\n      newDataSet.data.push(newNum);\n      if (newDataSet.data.length > this.state.meta.ticks) {\n        newDataSet.data.shift();\n      }\n\n      const newChartData = {\n        ...this.state.lineChartData,\n        datasets: [newDataSet],\n        labels: this.state.meta.lab.slice(this.state.meta.ticks > this.state.meta.lab.length ? -this.state.meta.lab.length : -this.state.meta.ticks)\n      };\n      this.setState({ lineChartData: newChartData });\n      console.log(this.state.lineChartData.labels)\n    },\n    updateInterval)\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes[\"chart-container\"]}>\n        <Chart\n          data={this.state.lineChartData}\n          options={this.state.lineChartOptions}\n        />\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(App);"]},"metadata":{},"sourceType":"module"}