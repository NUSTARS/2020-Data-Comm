{"ast":null,"code":"var _jsxFileName = \"/Users/Nathan/Desktop/data-comm-ui/src/ticks.js\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\"; // class Toggle extends React.Component {\n//     constructor(props) {\n//       super(props);\n//       this.state = {isToggleOn: true};\n//       // This binding is necessary to make `this` work in the callback\n//       this.handleClick = this.handleClick.bind(this);\n//     }\n//     handleClick() {\n//       this.setState(state => ({\n//         isToggleOn: !state.isToggleOn\n//       }));\n//     }\n//     render() {\n//       return (\n//         <button onClick={this.handleClick}>\n//           {this.state.isToggleOn ? 'ON' : 'OFF'}\n//         </button>\n//       );\n//     }\n//   }\n// export default Toggle;\n\nfunction ToggleGroup() {\n  const Button = styled.button`\n            background-color: black;\n            color: white;\n            font-size: 20px;\n            padding: 10px 60px;\n            border-radius: 5px;\n            margin: 10px 0px;\n            cursor: pointer;\n            &:disabled {\n                color: grey;\n                opacity: 0.7;\n                cursor: default;\n            }\n            `;\n  const ButtonToggle = styled(Button)`\n            opacity: 0.6;\n            ${({\n    active\n  }) => active && `\n                opacity: 1;\n            `}\n            `;\n  const ButtonGroup = styled.div`\n            display: flex;\n            `;\n  const types = ['Cash', 'Credit Card', 'Bitcoin'];\n  const [active, setActive] = useState(types[0]);\n  return /*#__PURE__*/React.createElement(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, types.map(type => /*#__PURE__*/React.createElement(ButtonToggle, {\n    key: type,\n    active: active === type,\n    onClick: () => setActive(type),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, type)));\n}\n\nrender( /*#__PURE__*/React.createElement(ToggleGroup, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 12\n  }\n})); // export default Toggle;","map":{"version":3,"sources":["/Users/Nathan/Desktop/data-comm-ui/src/ticks.js"],"names":["React","useState","styled","ToggleGroup","Button","button","ButtonToggle","active","ButtonGroup","div","types","setActive","map","type","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAGQ,SAASC,WAAT,GAAuB;AACnB,QAAMC,MAAM,GAAGF,MAAM,CAACG,MAAO;;;;;;;;;;;;;aAA7B;AAeA,QAAMC,YAAY,GAAGJ,MAAM,CAACE,MAAD,CAAS;;cAElC,CAAC;AAAEG,IAAAA;AAAF,GAAD,KACEA,MAAM,IACL;;aAEH;aANF;AAQA,QAAMC,WAAW,GAAGN,MAAM,CAACO,GAAI;;aAA/B;AAIA,QAAMC,KAAK,GAAG,CAAC,MAAD,EAAS,aAAT,EAAwB,SAAxB,CAAd;AACA,QAAM,CAACH,MAAD,EAASI,SAAT,IAAsBV,QAAQ,CAACS,KAAK,CAAC,CAAD,CAAN,CAApC;AAEA,sBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCA,KAAK,CAACE,GAAN,CAAUC,IAAI,iBACX,oBAAC,YAAD;AACA,IAAA,GAAG,EAAEA,IADL;AAEA,IAAA,MAAM,EAAEN,MAAM,KAAKM,IAFnB;AAGA,IAAA,OAAO,EAAE,MAAMF,SAAS,CAACE,IAAD,CAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKCA,IALD,CADH,CADD,CADJ;AAaH;;AAGLC,MAAM,eAAC,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAD,CAAN,C,CAEJ","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\n// class Toggle extends React.Component {\n//     constructor(props) {\n//       super(props);\n//       this.state = {isToggleOn: true};\n  \n//       // This binding is necessary to make `this` work in the callback\n//       this.handleClick = this.handleClick.bind(this);\n//     }\n  \n//     handleClick() {\n//       this.setState(state => ({\n//         isToggleOn: !state.isToggleOn\n//       }));\n//     }\n  \n//     render() {\n//       return (\n//         <button onClick={this.handleClick}>\n//           {this.state.isToggleOn ? 'ON' : 'OFF'}\n//         </button>\n//       );\n//     }\n//   }\n\n// export default Toggle;\n\n\n        function ToggleGroup() {\n            const Button = styled.button`\n            background-color: black;\n            color: white;\n            font-size: 20px;\n            padding: 10px 60px;\n            border-radius: 5px;\n            margin: 10px 0px;\n            cursor: pointer;\n            &:disabled {\n                color: grey;\n                opacity: 0.7;\n                cursor: default;\n            }\n            `;\n\n            const ButtonToggle = styled(Button)`\n            opacity: 0.6;\n            ${({ active }) =>\n                active &&\n                `\n                opacity: 1;\n            `}\n            `;\n            const ButtonGroup = styled.div`\n            display: flex;\n            `;\n\n            const types = ['Cash', 'Credit Card', 'Bitcoin'];\n            const [active, setActive] = useState(types[0]);\n\n            return (\n                <ButtonGroup>\n                {types.map(type => (\n                    <ButtonToggle\n                    key={type}\n                    active={active === type}\n                    onClick={() => setActive(type)}\n                    >\n                    {type}\n                    </ButtonToggle>\n                ))}\n                </ButtonGroup>\n            );\n        }\n\n\n    render(<ToggleGroup/>)\n\n// export default Toggle;"]},"metadata":{},"sourceType":"module"}