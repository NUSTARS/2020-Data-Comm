{"ast":null,"code":"var _jsxFileName = \"/Users/Nathan/Desktop/data-comm-ui/src/dataDropdown.js\";\nimport React from 'react';\nimport Select from 'react-select';\nimport { useTracked } from \"react-tracked\"; // const {data, setData} = useDataState();\n\nconst [state, dispatch] = useTracked();\n\nclass DataDropDown extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeFunc = selectedOptions => this.setState({\n      selected: selectedOptions.value\n    });\n\n    this.state = {\n      options: [],\n      selected: []\n    };\n  }\n\n  setOptions() {\n    var options = [];\n    Object.keys(state.data).forEach(key => options.push({\n      value: key,\n      label: key\n    }));\n    this.setState({\n      options: options\n    });\n\n    if (this.props.onChange) {\n      this.props.onChange(this.state);\n    }\n  }\n\n  componentDidMount() {\n    this.setOptions();\n  }\n\n  componentDidUpdate() {\n    this.setOptions();\n  }\n\n  // TODO: pass selected options to graph!\n  render() {\n    return /*#__PURE__*/React.createElement(Select // defaultValue={[labels[1]]}\n    , {\n      isMulti: true,\n      name: \"labels\",\n      options: this.state.options,\n      className: \"basic-multi-select\",\n      classNamePrefix: \"select\",\n      onChange: this.onChangeFunc,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport default DataDropDown;","map":{"version":3,"sources":["/Users/Nathan/Desktop/data-comm-ui/src/dataDropdown.js"],"names":["React","Select","useTracked","state","dispatch","DataDropDown","Component","constructor","props","onChangeFunc","selectedOptions","setState","selected","value","options","setOptions","Object","keys","data","forEach","key","push","label","onChange","componentDidMount","componentDidUpdate","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,UAAT,QAA2B,eAA3B,C,CAEA;;AACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBF,UAAU,EAApC;;AAGA,MAAMG,YAAN,SAA2BL,KAAK,CAACM,SAAjC,CAA2C;AAEzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA+BnBC,YA/BmB,GA+BJC,eAAe,IAAI,KAAKC,QAAL,CAAc;AAACC,MAAAA,QAAQ,EAAEF,eAAe,CAACG;AAA3B,KAAd,CA/Bf;;AAEjB,SAAKV,KAAL,GAAa;AACXW,MAAAA,OAAO,EAAE,EADE;AAEXF,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAEDG,EAAAA,UAAU,GAAG;AACX,QAAID,OAAO,GAAG,EAAd;AACAE,IAAAA,MAAM,CAACC,IAAP,CAAYd,KAAK,CAACe,IAAlB,EAAwBC,OAAxB,CAAgCC,GAAG,IAAIN,OAAO,CAACO,IAAR,CACrC;AACER,MAAAA,KAAK,EAAEO,GADT;AAEEE,MAAAA,KAAK,EAAEF;AAFT,KADqC,CAAvC;AAMA,SAAKT,QAAL,CAAc;AAACG,MAAAA,OAAO,EAAEA;AAAV,KAAd;;AAEA,QAAI,KAAKN,KAAL,CAAWe,QAAf,EAAyB;AACvB,WAAKf,KAAL,CAAWe,QAAX,CAAoB,KAAKpB,KAAzB;AACD;AACF;;AAEDqB,EAAAA,iBAAiB,GAAG;AAClB,SAAKT,UAAL;AACD;;AAEDU,EAAAA,kBAAkB,GAAG;AACnB,SAAKV,UAAL;AACD;;AAID;AAEAW,EAAAA,MAAM,GAAG;AACP,wBAAQ,oBAAC,MAAD,CACA;AADA;AAEA,MAAA,OAAO,MAFP;AAGA,MAAA,IAAI,EAAC,QAHL;AAIA,MAAA,OAAO,EAAE,KAAKvB,KAAL,CAAWW,OAJpB;AAKA,MAAA,SAAS,EAAC,oBALV;AAMA,MAAA,eAAe,EAAC,QANhB;AAOA,MAAA,QAAQ,EAAE,KAAKL,YAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AAUD;;AAhDwC;;AAmD3C,eAAeJ,YAAf","sourcesContent":["import React from 'react';\nimport Select from 'react-select';\nimport { useTracked } from \"react-tracked\";\n\n// const {data, setData} = useDataState();\nconst [state, dispatch] = useTracked();\n\n\nclass DataDropDown extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      options: [],\n      selected: []\n    }\n  };\n\n  setOptions() {\n    var options = [];\n    Object.keys(state.data).forEach(key => options.push(\n      {\n        value: key,\n        label: key\n      }\n    ));\n    this.setState({options: options});\n\n    if (this.props.onChange) {\n      this.props.onChange(this.state);\n    }\n  }\n\n  componentDidMount() {\n    this.setOptions();\n  }\n\n  componentDidUpdate() {\n    this.setOptions();\n  }\n\n  onChangeFunc = selectedOptions => this.setState({selected: selectedOptions.value});\n\n  // TODO: pass selected options to graph!\n\n  render() {\n    return (<Select\n            // defaultValue={[labels[1]]}\n            isMulti\n            name=\"labels\"\n            options={this.state.options}\n            className=\"basic-multi-select\"\n            classNamePrefix=\"select\"\n            onChange={this.onChangeFunc}\n          />\n    );\n  }\n}\n\nexport default DataDropDown;"]},"metadata":{},"sourceType":"module"}