{"ast":null,"code":"var _jsxFileName = \"/Users/Nathan/Desktop/data-comm-ui/src/App.js\";\nimport React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Chart from \"./chart\";\n\nconst styles = theme => ({\n  \"chart-container\": {\n    height: 400\n  }\n});\n\nlet updateInterval = 1000;\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ticks: 10,\n      lineChartData: {\n        labels: [0],\n        datasets: [{\n          type: \"line\",\n          label: \"test\",\n          backgroundColor: \"rgba(0, 0, 0, 1)\",\n          borderColor: this.props.theme.palette.primary.main,\n          pointBackgroundColor: this.props.theme.palette.secondary.main,\n          pointBorderColor: this.props.theme.palette.secondary.main,\n          borderWidth: \"2\",\n          lineTension: 0.45,\n          data: []\n        }]\n      },\n      lineChartOptions: {\n        responsive: true,\n        maintainAspectRatio: false,\n        tooltips: {\n          enabled: true\n        },\n        scales: {\n          xAxes: [{\n            ticks: {\n              autoSkip: true,\n              maxTicksLimit: 10\n            }\n          }]\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    setInterval(this.updateChart = e => {\n      const oldDataSet = this.state.lineChartData.datasets[0];\n      const newDataSet = { ...oldDataSet\n      };\n      const len = this.state.lineChartData.labels.length;\n      newDataSet.data.push(Math.round(Math.random() * 100)); // newDataSet.data.shift();\n\n      const newChartData = { ...this.state.lineChartData,\n        datasets: [newDataSet],\n        labels: this.state.lineChartData.labels.concat(len + 1).slice(this.state.ticks > this.state.lineChartData.labels.length ? this.state.lineChartData.labels.length : -this.state.ticks)\n      };\n      this.setState({\n        lineChartData: newChartData\n      });\n      console.log(this.state.lineChartData.labels);\n    }, updateInterval);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes[\"chart-container\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      data: this.state.lineChartData,\n      options: this.state.lineChartOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default withStyles(styles, {\n  withTheme: true\n})(App);","map":{"version":3,"sources":["/Users/Nathan/Desktop/data-comm-ui/src/App.js"],"names":["React","withStyles","Chart","styles","theme","height","updateInterval","App","Component","state","ticks","lineChartData","labels","datasets","type","label","backgroundColor","borderColor","props","palette","primary","main","pointBackgroundColor","secondary","pointBorderColor","borderWidth","lineTension","data","lineChartOptions","responsive","maintainAspectRatio","tooltips","enabled","scales","xAxes","autoSkip","maxTicksLimit","componentDidMount","setInterval","updateChart","e","oldDataSet","newDataSet","len","length","push","Math","round","random","newChartData","concat","slice","setState","console","log","render","classes","withTheme"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Chart from \"./chart\";\n\nconst styles = theme => ({\n  \"chart-container\": {\n    height: 400\n  }\n});\n\nlet updateInterval = 1000\n\nclass App extends React.Component {\n  state = {\n    ticks: 10,\n    lineChartData: {\n      labels: [0],\n      datasets: [\n        {\n          type: \"line\",\n          label: \"test\",\n          backgroundColor: \"rgba(0, 0, 0, 1)\",\n          borderColor: this.props.theme.palette.primary.main,\n          pointBackgroundColor: this.props.theme.palette.secondary.main,\n          pointBorderColor: this.props.theme.palette.secondary.main,\n          borderWidth: \"2\",\n          lineTension: 0.45,\n          data: []\n        }\n      ]\n    },\n    lineChartOptions: {\n      responsive: true,\n      maintainAspectRatio: false,\n      tooltips: {\n        enabled: true\n      },\n      scales: {\n        xAxes: [\n          {\n            ticks: {\n              autoSkip: true,\n              maxTicksLimit: 10\n            }\n          }\n        ]\n      }\n    }\n  };\n\n  componentDidMount() {\n    setInterval( this.updateChart = e => {\n      const oldDataSet = this.state.lineChartData.datasets[0];\n      const newDataSet = { ...oldDataSet };\n      const len = this.state.lineChartData.labels.length;\n      newDataSet.data.push(Math.round(Math.random()*100));\n      // newDataSet.data.shift();\n\n      const newChartData = {\n        ...this.state.lineChartData,\n        datasets: [newDataSet],\n        labels: this.state.lineChartData.labels.concat(\n          len + 1\n        ).slice(this.state.ticks > this.state.lineChartData.labels.length ? this.state.lineChartData.labels.length : -this.state.ticks)\n      };\n      this.setState({ lineChartData: newChartData });\n      console.log(this.state.lineChartData.labels)\n    },\n    updateInterval)\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes[\"chart-container\"]}>\n        <Chart\n          data={this.state.lineChartData}\n          options={this.state.lineChartOptions}\n        />\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(App);"]},"metadata":{},"sourceType":"module"}